security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    #providers:
    #    in_db:
    #        entity:
    #            class: App\Entity\User
    #            property: email

    role_hierarchy:
        ROLE_USER: ROLE_USER
        ROLE_ADMIN: [ROLE_ADMIN, ROLE_USER ]

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            anonymous: ~
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
            guard:
                authenticators:
                   - App\Security\LoginFormAuthenticator
            #provider: app_user_provider
            #form_login:
            #    login_path: login
            #    check_path: login
            #    csrf_token_generator: security.csrf.token_manager
            #    default_target_path: home_index

            logout:
                path:   app_logout
                target: home_index

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY } #Pour pouvoir coder sans BDD
        - { path: ^/user-characters, roles: ROLE_USER}
        - { path: ^/game, roles: ROLE_USER}
        - { path: ^/user, roles: ROLE_ADMIN}
        - { path: ^/characters, roles: ROLE_ADMIN}
        #- { path: ^/user, roles: ROLE_USER }