{% extends 'base.html.twig' %}

{% block title %}Home page{% endblock %}

{% block body %}

    <div class="panel">
        <h2>Tp training</h2>
        <h2>En condition réel !</h2>
        <h1>Chaque question correspond à 1 commit ( au total : 19 commits )</h1>
    </div>


    <div class="panel">
        <h2 style="color: green;">1.1 - Création de fixtures de 5 produits et attribuer au moins 2 produits à chaque utilisateur</h2>
        <h2 style="color: green;">1.2 - Création des CRUD de Product et de UserProduct</h2>
        <h2 style="color: green;">1.3 - Sécuriser produit(new/edit/delete) au ROLE_ADMIN et product(index) et userProduct(tous) au ROLE_USER</h2>
        <h2 style="color: green;">2 - Ajouter une image à un produit ( Gestion de l'import et affichage dans la page show)</h2>
        <h2 style="color: green;">3.1 - Sur la page de listing des produits ( Product:index) créer un bouton "Ajouter au panier" à coter de
            chaque
            produit </h2>
        <h2 style="color: green;">3.2 - Le bouton "Ajouter au panier" à coter de chaque produit est disponible seulement si un utilisateur
            est connecté.</h2>
        <h2 style="color: green;">3.3 - Modification du formulaire de UserProduct pour que, lorsqu'un produit est selectionné ( lors du clic sur "Ajouter au panier"), seul la
            quantité reste visible (User et Product directement set )</h2>
        <h2 style="color: green;">4.1 - Mettre en place le process de création de UserProduct avec les subscribers et retirer la quantité au stock du
            produit</h2>
        <h2 style="color: green;">4.2 - Créer une contrainte de validation sur UserProduct pour que la quantité demandé ne puisse pas
            dépasser la quantité reel du produit</h2>
        <h2>5.1 - Lorsque un utilisateur a au moins 1 UserProduct un bouton "Acheter" apparait en haut a droite de la page Product:index</h2>
        <h2 style="color: green;">5.2 - Création de la contrainte de validation de UserOrder:discount pour qu'il soit égale à 0, 5, 10, 15, 30 ou 50</h2>
        <h2>5.3 - Création du FormType de UserOrder:discount pour qu'il resemble à un input radio</h2>
        <h2>5.4 - Personnalisation du champ UserOrder:discount pour que la couleur de fond du champ change de #000000 = 0 jusque #FF0000 = 50 lors de la selection de la remise</h2>
        <h2>5.5 - Création du form de UserOrder et gestion de la création ( Calcul de UserOrder => price = somme des quantités * prix du produit avec la remise )</h2>
        <h2>6.1 - Création d'un service qui calcul les gains réalisés de journée( somme de tous les userOrder ) et le potentiel ( somme de tous les UserProduct sans userOrder )</h2>
        <h2>6.2 - Afficher le resultat des calculs de la journée sur une page dédié</h2>
        <h2>6.3 - Tester le service calcul</h2>
        <h2>7.1 - Modifier le service de calcul pour calculer la somme gagnée si les commandes n'avaient pas de remise</h2>
        <h2>7.2 - Modifier le Test du service calcul</h2>
	<h2 style="color: green;">8 - Créer le voter pour sécuriser UserOrder:show UserOrder:Edit pour qu'il ne soit accesible que par l'utilisateur de la commande</h2>
    </div>

    <div class="panel">
        <h1>Point bonus = 5pts</h1>
        <h2>1 => 0.25pt</h2>
        <h2>2 => 0.5pt</h2>
        <h2>3 => 0.5pt</h2>
        <h2>4 => 1pt</h2>
        <h2>5 => 1pt</h2>
        <h2>6 => 1pt</h2>
        <h2>7 => 0.25pt</h2>
	<h2>8 => 0.5pt</h2>
    </div>

{% endblock %}
